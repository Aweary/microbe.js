0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.14.4
3 info using node@v4.1.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/brandon.dail/Development/microbe',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/brandon.dail/.npm/microbe.js/0.1.13/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/brandon.dail/.npm/microbe.js/0.1.13/package.tgz',
9 verbose tar pack   '/Users/brandon.dail/Development/microbe' ]
10 verbose tarball /Users/brandon.dail/.npm/microbe.js/0.1.13/package.tgz
11 verbose folder /Users/brandon.dail/Development/microbe
12 info prepublish microbe.js@0.1.13
13 verbose unsafe-perm in lifecycle true
14 verbose addLocalTarball adding from inside cache /Users/brandon.dail/.npm/microbe.js/0.1.13/package.tgz
15 silly cache afterAdd microbe.js@0.1.13
16 verbose afterAdd /Users/brandon.dail/.npm/microbe.js/0.1.13/package/package.json not in flight; writing
17 verbose afterAdd /Users/brandon.dail/.npm/microbe.js/0.1.13/package/package.json written
18 silly publish { name: 'microbe.js',
18 silly publish   version: '0.1.13',
18 silly publish   description: 'A small Node.js framework for simple routing',
18 silly publish   main: 'dist/index.js',
18 silly publish   scripts:
18 silly publish    { prepublish: 'npm run build',
18 silly publish      test: './node_modules/mocha/bin/mocha spec',
18 silly publish      start: 'DEBUG=* node_modules/.bin/babel-node test',
18 silly publish      build: 'babel lib --out-dir dist/lib && ./node_modules/.bin/babel index.js > dist/index.js' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/Aweary/microbe.js.git' },
18 silly publish   keywords: [ 'Node', 'microbe.js', 'node', 'framework' ],
18 silly publish   author: { name: 'Brandon Dail', email: 'Kierkegaurd@gmail.com' },
18 silly publish   license: 'MIT',
18 silly publish   bugs: { url: 'https://github.com/Aweary/microbe.js/issues' },
18 silly publish   homepage: 'https://github.com/Aweary/microbe.js',
18 silly publish   dependencies:
18 silly publish    { '@aweary/except': '0.0.1',
18 silly publish      babel: '^5.8.21',
18 silly publish      chalk: '^1.0.0',
18 silly publish      consolidate: '^0.13.1',
18 silly publish      debug: '^2.2.0',
18 silly publish      delegates: '^0.1.0',
18 silly publish      finalhandler: '^0.4.0',
18 silly publish      handlebars: '^3.0.3',
18 silly publish      jade: '^1.11.0',
18 silly publish      merge: '^1.2.0',
18 silly publish      'merge-descriptors': '^1.0.0',
18 silly publish      methods: '^1.1.1',
18 silly publish      mime: '^1.3.4',
18 silly publish      only: '0.0.2',
18 silly publish      oppressor: '0.0.1',
18 silly publish      'parse-url': '^1.0.0',
18 silly publish      parseurl: '^1.3.0',
18 silly publish      'path-to-regexp': '^1.2.0',
18 silly publish      'query-string': '^2.4.0',
18 silly publish      routington: '^1.0.3' },
18 silly publish   devDependencies:
18 silly publish    { chai: '^2.3.0',
18 silly publish      coveralls: '^2.11.2',
18 silly publish      mocha: '^2.2.5',
18 silly publish      'mocha-lcov-reporter': '0.0.2' },
18 silly publish   readme: '# Microbe.js\n\n[![Join the chat at https://gitter.im/Aweary/microbe.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Aweary/microbe.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)  [![Build Status](https://travis-ci.org/Aweary/microbe.js.svg?branch=master)](https://travis-ci.org/Aweary/microbe.js)\n\nA small, easy to use Node.js framework.\n\n\n# Installation\n\n``` npm install microbe.js```\n\n\n# Usage\n\n\nMicrobe.js acts very similarly to Express.js in that you require the main package and instantiate your application by invoking it as a function.\n\nBelow is a basic example with only one route.\n\n```js\n\nimport microbe from \'microbe.js\'\nconst app = microbe(__dirname)\n\napp.route({\n  path: \'/\',\n  method: \'GET\',\n  handler: duplex => duplex.render(\'index\', {content: \'This is content!\'})\n})\n\napp.on(\'start\', () => {\n  console.log(`Application started on port ${app.get(\'port\')}`);\n})\n\napp.start(3000);\n```\n\nCurrently you must pass `__dirname` to the `microbe` function so\nit can easily locate relative folders/files.\n\nUnlike a vanilla Node server the callback function only takes\none argument, `duplex`.\n\n`duplex` provides an access point for all request and response\nmethods/accessors you\'d need to use. For example, you can get the request method at `duplex.method` and you can render a response\nwith `duplex.render`. You can also access the full request and response objects on `duplex.req` and `duplex.res` respectively/\n\n`duplex` simplifies the API and makes sure that the `ServerResponse` and `ClientRequest` objects aren\'t manipulated\ndirectly, so if you feel you need to access those objects directly, open an issue and we can get a better API setup.\n\n\n## Routing\n\nRouting is accomplished using the `app.route` method which accepts an objects used to build the route, or using convenience\nmethods as described below.\n\n\n`app.route` lets you declare your routes in a very direct\nway by explicitly providing the `path`, `method`, and `handler`\noptions.\n\n\n```js\napp.route({\n  path: \'/documents/:document\',\n  method: \'GET\',\n  handler: duplex => {\n    let document = duplex.params.document\n    duplex.static(`/documents/${document}`)\n  }\n})\n```\n\nRoute parameters are also available on the `req` object via `req.params`.\n\nMicrobe.js also provides standard convenience methods such as `app.get` and `app.post`\n\n```js\nlet details = getSomeDetailObject()\napp.get(\'/\', duplex => duplex.json({ details }))\n```\n\n## Rendering\n\n\nMicrobe.js implements `consolidate.js` which means you can use any of the supported engines. [Check their repo](https://github.com/tj/consolidate.js) for a comprehensive list.\n\nYou have to set a rendering engine if you\'re going to be using the `res.render` method, otherwise an error will be thrown.\n\nOr you may do so using the `app.set` method:\n\n```js\nimport microbe from \'microbe.js\'\nconst app = microbe(__dirname)\napp.set(\'engine\', \'handlebars\')\n```\n\nMicrobe.js will assume that your file extensions will be the same as the engine\'s name (e.g., `handlebars` uses `[name].handlebars`, `jade` uses `[name].jade`, etc.). If you need to use a different extension then set the `ext` value as well.\n\n```js\napp.set(\'ext\', \'hbs\')\n```\n\n\n`duplex.render` takes the file name (minus the extension) as the first argument and the data to render as the second\n\n```js\n  res.render(\'about\', {time: Date.now()})\n```\n\n\n## Middlware\n\nMiddleware is added to a route using the `app.use` method. The first argument is the route for which the middleware should be invoked. If no route is provided, then it will be used on all routes.\n\n```js\n\n  app.use(\'/api\', duplex => {\n    doSomeLoggingOrSomething(duplex)\n  })\n\n```\n\n## Events\nThe `app` object does inherit from `EventEmitter` meaning it can `emit` events and also listen for events. Currently there are a limited number of internal events, but you may attach a listener to any of them:\n\n`kickoff` is emitted when the app is being initialized/bootstrapped\n\n`route` is emitted when a request is routed, and it emits a data object with the signature `{ path, method, handler }`\n\n`start` is emitted when the application starts, and it emits the port the app started on.\n\n## State and configurations\n\nIf you need to configure your `Microbe.js` application, you can use the `app.set` method for adjusting values in the internal state object. Currently, the only two properties you should really be setting yourself are the \'views\' nad \'publicFolder\' which, as expected, determine where `Microbe.js` will look for your views and static files, respectively.\n\n```js\n  /* this defaults to \'views\' */\n  app.set(\'views\', \'templates\')\n\n  /* this defaults to \'public\'*/\n  app.set(\'publicFolder\', \'client\')\n```\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'dd6ffe1f986b0b36b54ccd756bda12203814bbfc',
18 silly publish   _id: 'microbe.js@0.1.13',
18 silly publish   _shasum: '4134fdee9d7eb28f093db5f5418647385732c6ef',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name microbe.js
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/microbe.js
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/brandon.dail/.npm/microbe.js/0.1.13/package.tgz
26 verbose request uri https://registry.npmjs.org/microbe.js
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 11:52:11 AM
29 verbose request using bearer token for auth
30 verbose request id 4975f3b25740fbf3
31 http request PUT https://registry.npmjs.org/microbe.js
32 http 403 https://registry.npmjs.org/microbe.js
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=60',
33 verbose headers   'content-length': '96',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Wed, 14 Oct 2015 16:52:12 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-ord1730-ORD',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1444841531.753013,VS0,VE853' }
34 verbose request invalidating /Users/brandon.dail/.npm/registry.npmjs.org/microbe.js on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.1.13." : microbe.js
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1073:14)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1019:12)
37 verbose statusCode 403
38 verbose pkgid microbe.js
39 verbose cwd /Users/brandon.dail/Development/microbe
40 error Darwin 15.0.0
41 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
42 error node v4.1.1
43 error npm  v2.14.4
44 error code E403
45 error "You cannot publish over the previously published version 0.1.13." : microbe.js
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
